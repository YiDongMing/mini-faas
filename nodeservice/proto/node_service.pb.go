// Code generated by protoc-gen-gogo.
// source: node_service.proto
// DO NOT EDIT!

/*
Package nodeservoceproto is a generated protocol buffer package.

It is generated from these files:
	node_service.proto

It has these top-level messages:
	ReserveRequest
	ReserveReply
	FunctionMeta
	CreateContainerRequest
	CreateContainerReply
	RemoveContainerRequest
	RemoveContainerReply
	InvokeFunctionRequest
	InvokeFunctionReply
	NodeStats
	ContainerStats
	GetStatsRequest
	GetStatsReply
*/
package nodeservoceproto

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ReserveRequest struct {
	RequestId      string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	OwnerAccountId string `protobuf:"bytes,2,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
}

func (m *ReserveRequest) Reset()                    { *m = ReserveRequest{} }
func (m *ReserveRequest) String() string            { return proto.CompactTextString(m) }
func (*ReserveRequest) ProtoMessage()               {}
func (*ReserveRequest) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{0} }

func (m *ReserveRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ReserveRequest) GetOwnerAccountId() string {
	if m != nil {
		return m.OwnerAccountId
	}
	return ""
}

type ReserveReply struct {
}

func (m *ReserveReply) Reset()                    { *m = ReserveReply{} }
func (m *ReserveReply) String() string            { return proto.CompactTextString(m) }
func (*ReserveReply) ProtoMessage()               {}
func (*ReserveReply) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{1} }

type FunctionMeta struct {
	FunctionName  string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Handler       string `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	TimeoutInMs   int64  `protobuf:"varint,3,opt,name=timeout_in_ms,json=timeoutInMs,proto3" json:"timeout_in_ms,omitempty"`
	MemoryInBytes int64  `protobuf:"varint,4,opt,name=memory_in_bytes,json=memoryInBytes,proto3" json:"memory_in_bytes,omitempty"`
}

func (m *FunctionMeta) Reset()                    { *m = FunctionMeta{} }
func (m *FunctionMeta) String() string            { return proto.CompactTextString(m) }
func (*FunctionMeta) ProtoMessage()               {}
func (*FunctionMeta) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{2} }

func (m *FunctionMeta) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *FunctionMeta) GetHandler() string {
	if m != nil {
		return m.Handler
	}
	return ""
}

func (m *FunctionMeta) GetTimeoutInMs() int64 {
	if m != nil {
		return m.TimeoutInMs
	}
	return 0
}

func (m *FunctionMeta) GetMemoryInBytes() int64 {
	if m != nil {
		return m.MemoryInBytes
	}
	return 0
}

type CreateContainerRequest struct {
	RequestId    string        `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Name         string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FunctionMeta *FunctionMeta `protobuf:"bytes,3,opt,name=function_meta,json=functionMeta" json:"function_meta,omitempty"`
}

func (m *CreateContainerRequest) Reset()         { *m = CreateContainerRequest{} }
func (m *CreateContainerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContainerRequest) ProtoMessage()    {}
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorNodeService, []int{3}
}

func (m *CreateContainerRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *CreateContainerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateContainerRequest) GetFunctionMeta() *FunctionMeta {
	if m != nil {
		return m.FunctionMeta
	}
	return nil
}

type CreateContainerReply struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (m *CreateContainerReply) Reset()                    { *m = CreateContainerReply{} }
func (m *CreateContainerReply) String() string            { return proto.CompactTextString(m) }
func (*CreateContainerReply) ProtoMessage()               {}
func (*CreateContainerReply) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{4} }

func (m *CreateContainerReply) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type RemoveContainerRequest struct {
	RequestId   string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (m *RemoveContainerRequest) Reset()         { *m = RemoveContainerRequest{} }
func (m *RemoveContainerRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveContainerRequest) ProtoMessage()    {}
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorNodeService, []int{5}
}

func (m *RemoveContainerRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *RemoveContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type RemoveContainerReply struct {
}

func (m *RemoveContainerReply) Reset()                    { *m = RemoveContainerReply{} }
func (m *RemoveContainerReply) String() string            { return proto.CompactTextString(m) }
func (*RemoveContainerReply) ProtoMessage()               {}
func (*RemoveContainerReply) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{6} }

type InvokeFunctionRequest struct {
	RequestId    string        `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ContainerId  string        `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Event        []byte        `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	FunctionMeta *FunctionMeta `protobuf:"bytes,4,opt,name=function_meta,json=functionMeta" json:"function_meta,omitempty"`
}

func (m *InvokeFunctionRequest) Reset()         { *m = InvokeFunctionRequest{} }
func (m *InvokeFunctionRequest) String() string { return proto.CompactTextString(m) }
func (*InvokeFunctionRequest) ProtoMessage()    {}
func (*InvokeFunctionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorNodeService, []int{7}
}

func (m *InvokeFunctionRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *InvokeFunctionRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *InvokeFunctionRequest) GetEvent() []byte {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *InvokeFunctionRequest) GetFunctionMeta() *FunctionMeta {
	if m != nil {
		return m.FunctionMeta
	}
	return nil
}

type InvokeFunctionReply struct {
	Body   []byte                      `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Header *InvokeFunctionReply_Header `protobuf:"bytes,2,opt,name=header" json:"header,omitempty"`
	Footer *InvokeFunctionReply_Footer `protobuf:"bytes,3,opt,name=footer" json:"footer,omitempty"`
}

func (m *InvokeFunctionReply) Reset()                    { *m = InvokeFunctionReply{} }
func (m *InvokeFunctionReply) String() string            { return proto.CompactTextString(m) }
func (*InvokeFunctionReply) ProtoMessage()               {}
func (*InvokeFunctionReply) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{8} }

func (m *InvokeFunctionReply) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *InvokeFunctionReply) GetHeader() *InvokeFunctionReply_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *InvokeFunctionReply) GetFooter() *InvokeFunctionReply_Footer {
	if m != nil {
		return m.Footer
	}
	return nil
}

type InvokeFunctionReply_Header struct {
	Error              []byte                                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Handled            bool                                         `protobuf:"varint,2,opt,name=handled,proto3" json:"handled,omitempty"`
	StatusCode         string                                       `protobuf:"bytes,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers            map[string]*InvokeFunctionReply_Header_Value `protobuf:"bytes,4,rep,name=headers" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	MaxMemUsageInBytes int64                                        `protobuf:"varint,5,opt,name=max_mem_usage_in_bytes,json=maxMemUsageInBytes,proto3" json:"max_mem_usage_in_bytes,omitempty"`
	FunctionLog        string                                       `protobuf:"bytes,6,opt,name=function_log,json=functionLog,proto3" json:"function_log,omitempty"`
}

func (m *InvokeFunctionReply_Header) Reset()         { *m = InvokeFunctionReply_Header{} }
func (m *InvokeFunctionReply_Header) String() string { return proto.CompactTextString(m) }
func (*InvokeFunctionReply_Header) ProtoMessage()    {}
func (*InvokeFunctionReply_Header) Descriptor() ([]byte, []int) {
	return fileDescriptorNodeService, []int{8, 0}
}

func (m *InvokeFunctionReply_Header) GetError() []byte {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *InvokeFunctionReply_Header) GetHandled() bool {
	if m != nil {
		return m.Handled
	}
	return false
}

func (m *InvokeFunctionReply_Header) GetStatusCode() string {
	if m != nil {
		return m.StatusCode
	}
	return ""
}

func (m *InvokeFunctionReply_Header) GetHeaders() map[string]*InvokeFunctionReply_Header_Value {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *InvokeFunctionReply_Header) GetMaxMemUsageInBytes() int64 {
	if m != nil {
		return m.MaxMemUsageInBytes
	}
	return 0
}

func (m *InvokeFunctionReply_Header) GetFunctionLog() string {
	if m != nil {
		return m.FunctionLog
	}
	return ""
}

type InvokeFunctionReply_Header_Value struct {
	Items []string `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *InvokeFunctionReply_Header_Value) Reset()         { *m = InvokeFunctionReply_Header_Value{} }
func (m *InvokeFunctionReply_Header_Value) String() string { return proto.CompactTextString(m) }
func (*InvokeFunctionReply_Header_Value) ProtoMessage()    {}
func (*InvokeFunctionReply_Header_Value) Descriptor() ([]byte, []int) {
	return fileDescriptorNodeService, []int{8, 0, 0}
}

func (m *InvokeFunctionReply_Header_Value) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

type InvokeFunctionReply_Footer struct {
	DurationInNanos int64  `protobuf:"varint,1,opt,name=duration_in_nanos,json=durationInNanos,proto3" json:"duration_in_nanos,omitempty"`
	InvokeException string `protobuf:"bytes,2,opt,name=invoke_exception,json=invokeException,proto3" json:"invoke_exception,omitempty"`
	Error           string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *InvokeFunctionReply_Footer) Reset()         { *m = InvokeFunctionReply_Footer{} }
func (m *InvokeFunctionReply_Footer) String() string { return proto.CompactTextString(m) }
func (*InvokeFunctionReply_Footer) ProtoMessage()    {}
func (*InvokeFunctionReply_Footer) Descriptor() ([]byte, []int) {
	return fileDescriptorNodeService, []int{8, 1}
}

func (m *InvokeFunctionReply_Footer) GetDurationInNanos() int64 {
	if m != nil {
		return m.DurationInNanos
	}
	return 0
}

func (m *InvokeFunctionReply_Footer) GetInvokeException() string {
	if m != nil {
		return m.InvokeException
	}
	return ""
}

func (m *InvokeFunctionReply_Footer) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type NodeStats struct {
	TotalMemoryInBytes     int64   `protobuf:"varint,1,opt,name=total_memory_in_bytes,json=totalMemoryInBytes,proto3" json:"total_memory_in_bytes,omitempty"`
	MemoryUsageInBytes     int64   `protobuf:"varint,2,opt,name=memory_usage_in_bytes,json=memoryUsageInBytes,proto3" json:"memory_usage_in_bytes,omitempty"`
	AvailableMemoryInBytes int64   `protobuf:"varint,3,opt,name=available_memory_in_bytes,json=availableMemoryInBytes,proto3" json:"available_memory_in_bytes,omitempty"`
	CpuUsagePct            float64 `protobuf:"fixed64,4,opt,name=cpu_usage_pct,json=cpuUsagePct,proto3" json:"cpu_usage_pct,omitempty"`
	DiskTotalInBytes       int64   `protobuf:"varint,5,opt,name=disk_total_in_bytes,json=diskTotalInBytes,proto3" json:"disk_total_in_bytes,omitempty"`
	DiskAvailInBytes       int64   `protobuf:"varint,6,opt,name=disk_avail_in_bytes,json=diskAvailInBytes,proto3" json:"disk_avail_in_bytes,omitempty"`
	DiskTotalInodes        int64   `protobuf:"varint,7,opt,name=disk_total_inodes,json=diskTotalInodes,proto3" json:"disk_total_inodes,omitempty"`
	DiskFreeInodes         int64   `protobuf:"varint,8,opt,name=disk_free_inodes,json=diskFreeInodes,proto3" json:"disk_free_inodes,omitempty"`
}

func (m *NodeStats) Reset()                    { *m = NodeStats{} }
func (m *NodeStats) String() string            { return proto.CompactTextString(m) }
func (*NodeStats) ProtoMessage()               {}
func (*NodeStats) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{9} }

func (m *NodeStats) GetTotalMemoryInBytes() int64 {
	if m != nil {
		return m.TotalMemoryInBytes
	}
	return 0
}

func (m *NodeStats) GetMemoryUsageInBytes() int64 {
	if m != nil {
		return m.MemoryUsageInBytes
	}
	return 0
}

func (m *NodeStats) GetAvailableMemoryInBytes() int64 {
	if m != nil {
		return m.AvailableMemoryInBytes
	}
	return 0
}

func (m *NodeStats) GetCpuUsagePct() float64 {
	if m != nil {
		return m.CpuUsagePct
	}
	return 0
}

func (m *NodeStats) GetDiskTotalInBytes() int64 {
	if m != nil {
		return m.DiskTotalInBytes
	}
	return 0
}

func (m *NodeStats) GetDiskAvailInBytes() int64 {
	if m != nil {
		return m.DiskAvailInBytes
	}
	return 0
}

func (m *NodeStats) GetDiskTotalInodes() int64 {
	if m != nil {
		return m.DiskTotalInodes
	}
	return 0
}

func (m *NodeStats) GetDiskFreeInodes() int64 {
	if m != nil {
		return m.DiskFreeInodes
	}
	return 0
}

type ContainerStats struct {
	ContainerId        string  `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	TotalMemoryInBytes int64   `protobuf:"varint,2,opt,name=total_memory_in_bytes,json=totalMemoryInBytes,proto3" json:"total_memory_in_bytes,omitempty"`
	MemoryUsageInBytes int64   `protobuf:"varint,3,opt,name=memory_usage_in_bytes,json=memoryUsageInBytes,proto3" json:"memory_usage_in_bytes,omitempty"`
	CpuUsagePct        float64 `protobuf:"fixed64,4,opt,name=cpu_usage_pct,json=cpuUsagePct,proto3" json:"cpu_usage_pct,omitempty"`
}

func (m *ContainerStats) Reset()                    { *m = ContainerStats{} }
func (m *ContainerStats) String() string            { return proto.CompactTextString(m) }
func (*ContainerStats) ProtoMessage()               {}
func (*ContainerStats) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{10} }

func (m *ContainerStats) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ContainerStats) GetTotalMemoryInBytes() int64 {
	if m != nil {
		return m.TotalMemoryInBytes
	}
	return 0
}

func (m *ContainerStats) GetMemoryUsageInBytes() int64 {
	if m != nil {
		return m.MemoryUsageInBytes
	}
	return 0
}

func (m *ContainerStats) GetCpuUsagePct() float64 {
	if m != nil {
		return m.CpuUsagePct
	}
	return 0
}

type GetStatsRequest struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (m *GetStatsRequest) Reset()                    { *m = GetStatsRequest{} }
func (m *GetStatsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStatsRequest) ProtoMessage()               {}
func (*GetStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{11} }

func (m *GetStatsRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type GetStatsReply struct {
	NodeStats          *NodeStats        `protobuf:"bytes,1,opt,name=node_stats,json=nodeStats" json:"node_stats,omitempty"`
	ContainerStatsList []*ContainerStats `protobuf:"bytes,2,rep,name=container_stats_list,json=containerStatsList" json:"container_stats_list,omitempty"`
	LiveId             string            `protobuf:"bytes,3,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`
	OwnerAccountId     string            `protobuf:"bytes,4,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
}

func (m *GetStatsReply) Reset()                    { *m = GetStatsReply{} }
func (m *GetStatsReply) String() string            { return proto.CompactTextString(m) }
func (*GetStatsReply) ProtoMessage()               {}
func (*GetStatsReply) Descriptor() ([]byte, []int) { return fileDescriptorNodeService, []int{12} }

func (m *GetStatsReply) GetNodeStats() *NodeStats {
	if m != nil {
		return m.NodeStats
	}
	return nil
}

func (m *GetStatsReply) GetContainerStatsList() []*ContainerStats {
	if m != nil {
		return m.ContainerStatsList
	}
	return nil
}

func (m *GetStatsReply) GetLiveId() string {
	if m != nil {
		return m.LiveId
	}
	return ""
}

func (m *GetStatsReply) GetOwnerAccountId() string {
	if m != nil {
		return m.OwnerAccountId
	}
	return ""
}

func init() {
	proto.RegisterType((*ReserveRequest)(nil), "nodeservoceproto.ReserveRequest")
	proto.RegisterType((*ReserveReply)(nil), "nodeservoceproto.ReserveReply")
	proto.RegisterType((*FunctionMeta)(nil), "nodeservoceproto.FunctionMeta")
	proto.RegisterType((*CreateContainerRequest)(nil), "nodeservoceproto.CreateContainerRequest")
	proto.RegisterType((*CreateContainerReply)(nil), "nodeservoceproto.CreateContainerReply")
	proto.RegisterType((*RemoveContainerRequest)(nil), "nodeservoceproto.RemoveContainerRequest")
	proto.RegisterType((*RemoveContainerReply)(nil), "nodeservoceproto.RemoveContainerReply")
	proto.RegisterType((*InvokeFunctionRequest)(nil), "nodeservoceproto.InvokeFunctionRequest")
	proto.RegisterType((*InvokeFunctionReply)(nil), "nodeservoceproto.InvokeFunctionReply")
	proto.RegisterType((*InvokeFunctionReply_Header)(nil), "nodeservoceproto.InvokeFunctionReply.Header")
	proto.RegisterType((*InvokeFunctionReply_Header_Value)(nil), "nodeservoceproto.InvokeFunctionReply.Header.Value")
	proto.RegisterType((*InvokeFunctionReply_Footer)(nil), "nodeservoceproto.InvokeFunctionReply.Footer")
	proto.RegisterType((*NodeStats)(nil), "nodeservoceproto.NodeStats")
	proto.RegisterType((*ContainerStats)(nil), "nodeservoceproto.ContainerStats")
	proto.RegisterType((*GetStatsRequest)(nil), "nodeservoceproto.GetStatsRequest")
	proto.RegisterType((*GetStatsReply)(nil), "nodeservoceproto.GetStatsReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeService service

type NodeServiceClient interface {
	Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveReply, error)
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerReply, error)
	RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc.CallOption) (*RemoveContainerReply, error)
	InvokeFunction(ctx context.Context, in *InvokeFunctionRequest, opts ...grpc.CallOption) (NodeService_InvokeFunctionClient, error)
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsReply, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveReply, error) {
	out := new(ReserveReply)
	err := grpc.Invoke(ctx, "/nodeservoceproto.NodeService/Reserve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerReply, error) {
	out := new(CreateContainerReply)
	err := grpc.Invoke(ctx, "/nodeservoceproto.NodeService/CreateContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc.CallOption) (*RemoveContainerReply, error) {
	out := new(RemoveContainerReply)
	err := grpc.Invoke(ctx, "/nodeservoceproto.NodeService/RemoveContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) InvokeFunction(ctx context.Context, in *InvokeFunctionRequest, opts ...grpc.CallOption) (NodeService_InvokeFunctionClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_NodeService_serviceDesc.Streams[0], c.cc, "/nodeservoceproto.NodeService/InvokeFunction", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeServiceInvokeFunctionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeService_InvokeFunctionClient interface {
	Recv() (*InvokeFunctionReply, error)
	grpc.ClientStream
}

type nodeServiceInvokeFunctionClient struct {
	grpc.ClientStream
}

func (x *nodeServiceInvokeFunctionClient) Recv() (*InvokeFunctionReply, error) {
	m := new(InvokeFunctionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeServiceClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsReply, error) {
	out := new(GetStatsReply)
	err := grpc.Invoke(ctx, "/nodeservoceproto.NodeService/GetStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeService service

type NodeServiceServer interface {
	Reserve(context.Context, *ReserveRequest) (*ReserveReply, error)
	CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerReply, error)
	RemoveContainer(context.Context, *RemoveContainerRequest) (*RemoveContainerReply, error)
	InvokeFunction(*InvokeFunctionRequest, NodeService_InvokeFunctionServer) error
	GetStats(context.Context, *GetStatsRequest) (*GetStatsReply, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Reserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/Reserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Reserve(ctx, req.(*ReserveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_RemoveContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).RemoveContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/RemoveContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).RemoveContainer(ctx, req.(*RemoveContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_InvokeFunction_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InvokeFunctionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeServiceServer).InvokeFunction(m, &nodeServiceInvokeFunctionServer{stream})
}

type NodeService_InvokeFunctionServer interface {
	Send(*InvokeFunctionReply) error
	grpc.ServerStream
}

type nodeServiceInvokeFunctionServer struct {
	grpc.ServerStream
}

func (x *nodeServiceInvokeFunctionServer) Send(m *InvokeFunctionReply) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeService_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetStats(ctx, req.(*GetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeservoceproto.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reserve",
			Handler:    _NodeService_Reserve_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _NodeService_CreateContainer_Handler,
		},
		{
			MethodName: "RemoveContainer",
			Handler:    _NodeService_RemoveContainer_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _NodeService_GetStats_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InvokeFunction",
			Handler:       _NodeService_InvokeFunction_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "node_service.proto",
}

func init() { proto.RegisterFile("node_service.proto", fileDescriptorNodeService) }

var fileDescriptorNodeService = []byte{
	// 1004 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4b, 0x73, 0x1b, 0x45,
	0x10, 0xf6, 0x6a, 0xf5, 0xb0, 0x5a, 0x4f, 0x26, 0x8e, 0x10, 0xa2, 0x92, 0x38, 0x4b, 0x11, 0x04,
	0x05, 0xae, 0x20, 0x2e, 0x38, 0xb7, 0x60, 0x62, 0xa2, 0xaa, 0xc8, 0x95, 0xda, 0x00, 0x55, 0x70,
	0xd9, 0x1a, 0xef, 0xb6, 0x9d, 0x2d, 0xef, 0xce, 0x88, 0xdd, 0x59, 0x61, 0xdd, 0xf9, 0x01, 0x1c,
	0xb8, 0xf0, 0x3f, 0xb8, 0x72, 0xe2, 0x9f, 0xe4, 0x97, 0x50, 0xf3, 0x58, 0xad, 0x5e, 0x4e, 0x64,
	0x8a, 0x93, 0xd4, 0xdf, 0xf4, 0xf4, 0xd7, 0xd3, 0xaf, 0x6d, 0x20, 0x8c, 0x07, 0xe8, 0xa5, 0x98,
	0xcc, 0x42, 0x1f, 0x8f, 0xa6, 0x09, 0x17, 0x9c, 0x74, 0x25, 0x26, 0x21, 0xee, 0xa3, 0x42, 0x9c,
	0x9f, 0xa0, 0xed, 0x2a, 0x04, 0x5d, 0xfc, 0x25, 0xc3, 0x54, 0x90, 0x7b, 0x00, 0x89, 0xfe, 0xeb,
	0x85, 0x41, 0xdf, 0x3a, 0xb4, 0x86, 0x75, 0xb7, 0x6e, 0x90, 0x71, 0x40, 0x86, 0xd0, 0xe5, 0xbf,
	0x32, 0x4c, 0x3c, 0xea, 0xfb, 0x3c, 0x63, 0x4a, 0xa9, 0xa4, 0x94, 0xda, 0x0a, 0x7f, 0xaa, 0xe1,
	0x71, 0xe0, 0xb4, 0xa1, 0xb9, 0x30, 0x3d, 0x8d, 0xe6, 0xce, 0x9f, 0x16, 0x34, 0x4f, 0x33, 0xe6,
	0x8b, 0x90, 0xb3, 0x09, 0x0a, 0x4a, 0x3e, 0x82, 0xd6, 0x85, 0x91, 0x3d, 0x46, 0x63, 0x34, 0x64,
	0xcd, 0x1c, 0x3c, 0xa3, 0x31, 0x92, 0x3e, 0xd4, 0x5e, 0x53, 0x16, 0x44, 0x98, 0x18, 0x9a, 0x5c,
	0x24, 0x0e, 0xb4, 0x44, 0x18, 0x23, 0xcf, 0x84, 0x17, 0x32, 0x2f, 0x4e, 0xfb, 0xf6, 0xa1, 0x35,
	0xb4, 0xdd, 0x86, 0x01, 0xc7, 0x6c, 0x92, 0x92, 0x47, 0xd0, 0x89, 0x31, 0xe6, 0xc9, 0x5c, 0xaa,
	0x9c, 0xcf, 0x05, 0xa6, 0xfd, 0xb2, 0xd2, 0x6a, 0x69, 0x78, 0xcc, 0xbe, 0x91, 0xa0, 0xf3, 0xbb,
	0x05, 0xbd, 0x93, 0x04, 0xa9, 0xc0, 0x13, 0xce, 0x04, 0x0d, 0x19, 0x26, 0x3b, 0xc6, 0x83, 0x40,
	0x59, 0xf9, 0xae, 0x9d, 0x53, 0xff, 0xc9, 0xc9, 0xd2, 0xc3, 0x62, 0x14, 0x54, 0x79, 0xd6, 0x18,
	0xdd, 0x3f, 0x5a, 0x0f, 0xff, 0xd1, 0x72, 0x3c, 0x8a, 0x87, 0x4b, 0xc9, 0x39, 0x86, 0x83, 0x0d,
	0x8f, 0xa6, 0xd1, 0x9c, 0x3c, 0x84, 0xa6, 0x9f, 0x23, 0x85, 0x47, 0x8d, 0x05, 0x36, 0x0e, 0x9c,
	0x9f, 0xa1, 0xe7, 0x62, 0xcc, 0x67, 0xb7, 0x7e, 0xcc, 0xba, 0xed, 0xd2, 0xa6, 0xed, 0x1e, 0x1c,
	0x6c, 0xd8, 0x96, 0xd9, 0xfd, 0xcb, 0x82, 0xbb, 0x63, 0x36, 0xe3, 0x57, 0x98, 0xbf, 0xe9, 0x7f,
	0xe3, 0x24, 0x07, 0x50, 0xc1, 0x19, 0x32, 0xa1, 0xe2, 0xd8, 0x74, 0xb5, 0xb0, 0x19, 0xe5, 0xf2,
	0x7f, 0x88, 0xf2, 0x3f, 0x15, 0xb8, 0xb3, 0xee, 0xb6, 0x8c, 0x32, 0x81, 0xf2, 0x39, 0x0f, 0xe6,
	0xca, 0xdd, 0xa6, 0xab, 0xfe, 0x93, 0x6f, 0xa1, 0xfa, 0x1a, 0x69, 0x60, 0x2a, 0xb1, 0x31, 0xfa,
	0x7c, 0x93, 0x69, 0x8b, 0xa9, 0xa3, 0xe7, 0xea, 0x8e, 0x6b, 0xee, 0x4a, 0x2b, 0x17, 0x9c, 0x0b,
	0x4c, 0x4c, 0x55, 0xec, 0x68, 0xe5, 0x54, 0xdd, 0x71, 0xcd, 0xdd, 0xc1, 0x1f, 0x36, 0x54, 0xb5,
	0x61, 0x15, 0x9d, 0x24, 0xe1, 0x89, 0xf1, 0x55, 0x0b, 0x45, 0xdf, 0xe8, 0x88, 0xee, 0xe7, 0x7d,
	0x13, 0x90, 0x07, 0xd0, 0x48, 0x05, 0x15, 0x59, 0xea, 0xf9, 0x3c, 0x40, 0xe5, 0x45, 0xdd, 0x05,
	0x0d, 0x9d, 0xf0, 0x00, 0xc9, 0x2b, 0xa8, 0x69, 0x5f, 0x65, 0xb3, 0xd8, 0xc3, 0xc6, 0xe8, 0xf8,
	0x36, 0x0f, 0x35, 0x3f, 0xe9, 0x33, 0x26, 0x92, 0xb9, 0x9b, 0x5b, 0x22, 0x23, 0xe8, 0xc5, 0xf4,
	0xda, 0x8b, 0x31, 0xf6, 0xb2, 0x94, 0x5e, 0x62, 0xd1, 0x90, 0x15, 0xd5, 0x90, 0x24, 0xa6, 0xd7,
	0x13, 0x8c, 0x7f, 0x90, 0x67, 0xa6, 0x2b, 0x65, 0x69, 0x2c, 0x32, 0x1c, 0xf1, 0xcb, 0x7e, 0x55,
	0x97, 0x46, 0x8e, 0xbd, 0xe0, 0x97, 0x83, 0x7b, 0x50, 0xf9, 0x91, 0x46, 0x19, 0xca, 0x28, 0x84,
	0x02, 0xe3, 0xb4, 0x6f, 0x1d, 0xda, 0xc3, 0xba, 0xab, 0x85, 0x01, 0x83, 0xe6, 0xb2, 0x3b, 0xa4,
	0x0b, 0xf6, 0x15, 0xce, 0x4d, 0x11, 0xca, 0xbf, 0xe4, 0x39, 0x54, 0x66, 0xd2, 0x80, 0xc9, 0xe9,
	0xe8, 0x56, 0x4f, 0x55, 0xd4, 0xae, 0x36, 0xf0, 0xa4, 0xf4, 0xb5, 0x35, 0xc8, 0xa0, 0xaa, 0x13,
	0x45, 0x3e, 0x83, 0xf7, 0x82, 0x2c, 0xa1, 0xca, 0xf7, 0x50, 0xce, 0x37, 0xc6, 0x53, 0xc5, 0x6b,
	0xbb, 0x9d, 0xfc, 0x60, 0xcc, 0xce, 0x24, 0x4c, 0x3e, 0x85, 0x6e, 0xa8, 0x48, 0x3c, 0xbc, 0xf6,
	0x71, 0x2a, 0x8f, 0x4c, 0x1b, 0x74, 0x34, 0xfe, 0x2c, 0x87, 0x8b, 0x64, 0xeb, 0xb4, 0x69, 0xc1,
	0xf9, 0xcd, 0x86, 0xfa, 0x19, 0x0f, 0xf0, 0x95, 0xa0, 0x22, 0x25, 0x5f, 0xc2, 0x5d, 0xc1, 0x05,
	0x8d, 0xbc, 0xf5, 0xd1, 0xa7, 0xe9, 0x89, 0x3a, 0x9c, 0x2c, 0xcf, 0x3f, 0x79, 0xc5, 0x28, 0xaf,
	0x25, 0xa7, 0x64, 0x92, 0xa3, 0x0e, 0x57, 0x92, 0x73, 0x0c, 0x1f, 0xd0, 0x19, 0x0d, 0x23, 0x7a,
	0x1e, 0xe1, 0x06, 0x93, 0x1e, 0xc5, 0xbd, 0x85, 0xc2, 0x2a, 0x9b, 0x03, 0x2d, 0x7f, 0x9a, 0x19,
	0xaa, 0xa9, 0x2f, 0x54, 0xe7, 0x5a, 0x6e, 0xc3, 0x9f, 0x66, 0x8a, 0xe2, 0xa5, 0x2f, 0xc8, 0x17,
	0x70, 0x27, 0x08, 0xd3, 0x2b, 0x4f, 0xbf, 0x64, 0xad, 0x58, 0xba, 0xf2, 0xe8, 0x7b, 0x79, 0x92,
	0x9b, 0xcc, 0xd5, 0x15, 0x63, 0xa1, 0x5e, 0x2d, 0xd4, 0x9f, 0xca, 0x93, 0x5c, 0x5d, 0x66, 0x67,
	0xd9, 0xba, 0xcc, 0x79, 0xbf, 0x66, 0xb2, 0x53, 0xd8, 0x96, 0xb0, 0xfc, 0xe2, 0x29, 0xdd, 0x8b,
	0x04, 0x31, 0x57, 0xdd, 0x57, 0xaa, 0x6d, 0x89, 0x9f, 0x26, 0x88, 0x5a, 0xd3, 0xf9, 0xdb, 0x82,
	0xf6, 0x62, 0x2c, 0xea, 0x5c, 0xbc, 0x7b, 0x5a, 0xdf, 0x9c, 0xae, 0xd2, 0xed, 0xd3, 0x65, 0xdf,
	0x98, 0xae, 0x1d, 0x62, 0xee, 0x3c, 0x86, 0xce, 0x77, 0x28, 0x94, 0xe3, 0xbb, 0x0d, 0x6f, 0xe7,
	0x8d, 0x05, 0xad, 0xe2, 0x8a, 0x1c, 0x9c, 0x4f, 0x00, 0xf4, 0xe2, 0x21, 0x21, 0x75, 0xa1, 0x31,
	0xfa, 0x70, 0xb3, 0xa9, 0x16, 0xd5, 0xea, 0xd6, 0xd9, 0xa2, 0x70, 0x5d, 0x38, 0x28, 0x82, 0xa5,
	0x0c, 0x78, 0x51, 0x98, 0x8a, 0x7e, 0x49, 0x4d, 0xa1, 0xc3, 0x4d, 0x2b, 0xab, 0xc1, 0x76, 0x89,
	0xbf, 0x22, 0xbf, 0x08, 0x53, 0x41, 0xde, 0x87, 0x5a, 0x14, 0xce, 0x50, 0x7a, 0xaf, 0x5b, 0xa6,
	0x2a, 0xc5, 0x1b, 0x16, 0x99, 0xf2, 0xb6, 0x45, 0x66, 0xf4, 0xc6, 0x86, 0x86, 0xf2, 0x57, 0xef,
	0x52, 0x64, 0x02, 0x35, 0xb3, 0xd8, 0x90, 0x2d, 0x3e, 0xad, 0xae, 0x53, 0x83, 0xfb, 0x6f, 0xd1,
	0x90, 0xdf, 0xcd, 0x3d, 0x82, 0xd0, 0x59, 0xfb, 0xd0, 0x93, 0xe1, 0x96, 0xa7, 0x6e, 0xdd, 0x4e,
	0x06, 0x8f, 0x76, 0xd0, 0x5c, 0xd0, 0xac, 0x7d, 0xb8, 0xb7, 0xd1, 0x6c, 0xdf, 0x1b, 0xb6, 0xd1,
	0x6c, 0xdd, 0x02, 0xf6, 0x48, 0x00, 0xed, 0xd5, 0x81, 0x49, 0x3e, 0x79, 0xf7, 0x48, 0xd5, 0x24,
	0x1f, 0xef, 0x34, 0x7b, 0x9d, 0xbd, 0xc7, 0x16, 0x79, 0x09, 0xfb, 0x79, 0xd9, 0x91, 0x87, 0x9b,
	0xd7, 0xd6, 0xaa, 0x78, 0xf0, 0xe0, 0x6d, 0x2a, 0xca, 0xe6, 0x79, 0x55, 0xc1, 0x5f, 0xfd, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x73, 0x9b, 0x31, 0xfb, 0x37, 0x0b, 0x00, 0x00,
}
